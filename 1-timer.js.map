{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  start: document.querySelector('button[data-start]'),\n  days: document.querySelector('span[data-days]'),\n  hours: document.querySelector('span[data-hours]'),\n  minutes: document.querySelector('span[data-minutes]'),\n  seconds: document.querySelector('span[data-seconds]'),\n};\n\nlet userSelectedDate = null;\n\nconst errorMessage = () => {\n  return iziToast.error({\n    title: 'Error',\n    message: 'Please choose a date in the future',\n    position: 'topRight',\n    transitionIn: 'fadeInDown',\n    resetOnHover: true,\n  });\n};\n\nconst flatpickrOptions = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (selectedDates[0] < Date.now()) {\n      refs.start.disabled = true;\n      errorMessage();\n      return;\n    }\n\n    userSelectedDate = selectedDates[0].getTime();\n    refs.start.disabled = false;\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst addLeadingZero = (value) => {\n  return value < 10 ? value.toString().padStart(2, 0) : value;\n};\n\nflatpickr(refs.input, flatpickrOptions);\n\nrefs.start.addEventListener('click', () => {\n  refs.start.disabled = true;\n  refs.input.disabled = true;\n\n  const timerId = setInterval(() => {\n    const currentDate = Date.now();\n    const timer = userSelectedDate - currentDate;\n\n    if (timer <= 0) {\n      clearInterval(timerId);\n      refs.input.disabled = false;\n      return;\n    }\n\n    const timeData = convertMs(timer);\n\n    Object.entries(refs).forEach(([key, element]) => {\n      if (key === 'input' || key === 'start') return;\n      element.textContent = addLeadingZero(timeData[key]);\n    });\n  }, 1000);\n});\n"],"names":["refs","userSelectedDate","errorMessage","iziToast","flatpickrOptions","selectedDates","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","flatpickr","timerId","currentDate","timer","timeData","key","element"],"mappings":"+IAKA,MAAMA,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,MAAO,SAAS,cAAc,oBAAoB,EAClD,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACtD,EAEA,IAAIC,EAAmB,KAEvB,MAAMC,EAAe,IACZC,EAAS,MAAM,CACpB,MAAO,QACP,QAAS,qCACT,SAAU,WACV,aAAc,aACd,aAAc,EAClB,CAAG,EAGGC,EAAmB,CACvB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,GAAIA,EAAc,CAAC,EAAI,KAAK,IAAG,EAAI,CACjCL,EAAK,MAAM,SAAW,GACtBE,IACA,MACD,CAEDD,EAAmBI,EAAc,CAAC,EAAE,QAAO,EAC3CL,EAAK,MAAM,SAAW,EACvB,CACH,EAEA,SAASM,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAkBC,GACfA,EAAQ,GAAKA,EAAM,SAAQ,EAAG,SAAS,EAAG,CAAC,EAAIA,EAGxDC,EAAUd,EAAK,MAAOI,CAAgB,EAEtCJ,EAAK,MAAM,iBAAiB,QAAS,IAAM,CACzCA,EAAK,MAAM,SAAW,GACtBA,EAAK,MAAM,SAAW,GAEtB,MAAMe,EAAU,YAAY,IAAM,CAChC,MAAMC,EAAc,KAAK,MACnBC,EAAQhB,EAAmBe,EAEjC,GAAIC,GAAS,EAAG,CACd,cAAcF,CAAO,EACrBf,EAAK,MAAM,SAAW,GACtB,MACD,CAED,MAAMkB,EAAWZ,EAAUW,CAAK,EAEhC,OAAO,QAAQjB,CAAI,EAAE,QAAQ,CAAC,CAACmB,EAAKC,CAAO,IAAM,CAC3CD,IAAQ,SAAWA,IAAQ,UAC/BC,EAAQ,YAAcR,EAAeM,EAASC,CAAG,CAAC,EACxD,CAAK,CACF,EAAE,GAAI,CACT,CAAC"}